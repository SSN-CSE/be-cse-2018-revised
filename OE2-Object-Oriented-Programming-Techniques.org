* <<<OE2>>> OBJECT ORIENTED PROGRAMMING TECHNIQUES
:properties:
:author: B. Bharathi
:end:
#+begin_comment
- 1. Most of the topics are same as AU syllabus. First unit of the OOP in AU syllabus is divided in to three units.Mulitithreading and event handling topics are removed
- 2. For changes, see the individual units.
- 3. Not Applicable
- 4. Five Course outcomes specified and aligned with units
- 5. Suggestive experiments are given
#+end_comment


#+startup: showall
** CO PO MAPPING :noexport:
#+NAME: co-po-mapping
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
|                |    |  K3 |  K4 |  K5 |  K5 |  K6 |   - |   - |   - |   - |    - |    - |    - |   K5 |   K3 |   K6 |
| CO1            | K2 |   2 |   2 |   1 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    1 |    2 |    1 |
| CO2            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| CO3            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| CO4            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| CO5            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| Score          |    |  14 |  10 |  9  |   0 |   5 |   0 |   0 |   5 |   5 |    5 |    0 |    5 |   9  |   14 |    5 |
| Course Mapping |    |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
{{{credits}}}
| L | T | P | C |
| 2 | 0 | 2 | 3 |

** COURSE OBJECTIVES
- To learn the basics of Object Oriented Programming 
- To learn the programming constructs of Java
- To know the principles of inheritance and polymorphism. 

{{{unit}}}
| UNIT I | INTRODUCTION | 9 |
Principles of OOP: Classes -- Objects -- Data hiding -- Data
encapsulation -- Inheritance -- Polymorphism; Definition of classes:
objects - methods -- Access specifiers -- Static and final classes and
members; Object construction and destruction.
#+begin_comment
All the topics are given in first unit of AU syllabus
#+end_comment


{{{unit}}}
| UNIT II | BASICS OF JAVA | 9 |
Features of Java -- Basics of Java programming: Data types - Variables
-- Operators -- Control structures -- Arrays -- Strings.
#+begin_comment
All the topics are given in first unit of AU syllabus, removed Javadoc
comments
#+end_comment

{{{unit}}}
| UNIT III | CLASSES AND OBJECTS | 9 |
Objects and Classes in Java: Defining classes -- Methods -- Access
specifiers -- Static members; Constructors: Constructor overloading;
Method overloading -- Recursion -- Passing and returning object from
method -- Packages in Java.

#+begin_comment
All the topics are given in first unit of AU syllabus
#+end_comment

{{{unit}}}
|UNIT IV | INHERITANCE | 9 |
Inheritance: Definition -- Types of inheritance: Single --
multilevel - multiple -- hierarchical -- hybrid; Subclass constructors
-- Interfaces in Java: Definition, Implementation -- Extending
interfaces -- Examples in Java.

#+begin_comment
All the topics are given in second unit of AU syllabus
Inner classes are removed
#+end_comment

{{{unit}}}
| UNIT V | POLYMORPHISM | 9 |
Polymorphism: Method overloading and overriding -- Dynamic method
dispatch; Exceptions: Hierarchy, Built-in exceptions, Creating own
exception; Definition and Concepts: Generic methods -- Generic types.
#+begin_comment
All the topics are given in thrid and fourth unit of AU syllabus
I/O streams,Multithreading topics are removed
#+end_comment
\hfill *Theory Periods: 30*

** SUGGESTIVE EXPERIMENTS
 - Program in Java using classes and objects (Eg: Marklist generation)
 - Program to perform string operations using ArrayList. 
 - Program to implement packages (Eg: Currency converter)
 - Program using Inheritance (Eg: Payroll application)
 - Prgram to implement Polymorphism (Eg. Area of different shapes)
 - Program to implement generic methods (Eg: Sorting)
 - Design a Java interface for ADTs (Eg. Stack, Queue).

\hfill *Practical Periods: 30*

\hfill *Total Periods: 60*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Understand object oriented programming features (K2)
- Develop programs using basic constructs of Java (K3)
- Solve problems using classes and methods (K3) 
- Develop programs using inheritance and interfaces (K3) 
- Use the concept of polymorphism (K3).
      
** TEXT BOOKS
1. Herbert Schildt, ``Java: The Complete Reference'', 8th Edition,
   McGraw Hill Education, 2011.

** REFERENCES
1. Timothy Budd, ``Understanding Object-oriented Programming with
   Java'', Updated Edition, Pearson Education, 2000.
2. C Thomas Wu, ``An introduction to Object-oriented Programming with
   Java'', Fourth Edition, Tata McGraw-Hill Publishing company
   Ltd., 2006.
3. Cay S Horstmann, Gary cornell, ``Core Java Volume â€“ I
   Fundamentals'' 9th Edition, Prentice Hall, 2013.
4. Paul Deitel, Harvey Deitel, ``Java SE 8 for Programmers'', 3rd
   Edition, Pearson, 2015.
5. Steven Holzner, ``Java 2 Black Book'', Dreamtech Press, 2011.
