* <<<608>>> MINI PROJECT
:properties:
:author: Ms. S. Manisha and Dr. K. Valli Devi
:date:
:end:

#+begin_comment
1. Almost the same as AU
2. No changes from AU 2017.
3. Not Applicable
4. Five Course outcomes specified and aligned with units
5. Suggestive List of Experiments given.
#+end_comment

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 0 | 0 | 3 | 1.5 |

** COURSE OBJECTIVES
1. To capture the requirements specification for an intended software system 
2. To draw the UML diagrams for the given specification 
3. To map the design properly to code 
4. To test the software system thoroughly for all scenarios 
5. To improve the design by applying appropriate design patterns. 


** SUGGESTIVE LIST OF EXPERIMENTS
For a chosen case study, prepare a detailed SRS, draw standard UML diagrams using a UML modeling tool, 
map the design to code and implement the solution using a 3 layered
architecture. Test the developed code and verify whether it satisfies the requirements 
specified in the SRS. As you refine the software using design patterns, keep repeating
the cycle of design, coding and
testing to ensure that the refined system also satisfies the requirements specified in SRS. 
Any one of the suggested domains could be
chosen for the mini-project. The student can also choose his/her own
domain of interest and can obtain approval from the concerned faculty.

1. Develop a problem statement.
2. Document the Software Requirements Specification (SRS) for the
   above problem statement.
3. Identify use cases and develop the Use Case model.
4. Identify the conceptual classes and develop a Domain Model and also
   derive a Class Diagram from the already designed Domain Model.
5. Using the identified scenarios, find the interaction between
   objects and represent them using UML Sequence and Collaboration
   Diagrams
6. Draw relevant State Chart and Activity Diagrams for the same
   problem.
7. Implement the solution with the detailed design structure (1-6).
8. Test the developed software system for various scenarios. Identify the areas in which
   refinement is needed.
9. Refine the design of the modules using appropriate design patterns and implement the same.
10. Test the refined software to check, whether it
    still satisfies the SRS

** SUGGESTED DOMAINS FOR MINI PROJECT
1. Passport automation system.
2. Book bank
3. Exam Registration
4. Stock maintenance system.
5. Online course reservation system
6. E-ticketing
7. Employeel management system
8. Credit card processing
9. e-book management system
10. Recruitment system
11. Foreign trading system
12. Conference Management System
13. BPO Management System
14. Library Management System
15. Student Information System

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Understand the requirements for a given problem specification. (K2)
- Design and draw UML diagrams. (K3)
- Map design to code and implement using UML diagrams. (K4)
- Design and generate test cases. (K3)
- Design UML diagrams by applying appropriate design patterns (K3).

** LABORATORY REQUIREMENT FOR BATCH OF 38 STUDENTS 
Hardware: \\
- Standalone Desktops - 38 Nos 

Software: \\
- ArgoUML that supports UML 1.4 and higher
- Selenium, JUnit or Apache JMeter
