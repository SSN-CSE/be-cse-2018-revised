* <<<303>>> DATA STRUCTURES
:properties:
:author: Ms. M. Saritha and Dr. B. Prabavathy
:date: 
:end:
#+startup: showall

** CO PO MAPPING :noexport:
#+NAME: co-po-mapping
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
|                |    |  K3 |  K4 |  K5 |  K5 |  K6 |   - |   - |   - |   - |    - |    - |    - |   K5 |   K3 |   K6 |
| CO1            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| CO2            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| CO3            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| CO4            | K3 |   3 |   2 |   2 |   0 |   1 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    1 |
| CO5            | K4 |   3 |   3 |   2 |   0 |   2 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    2 |
| Score          |    |  15 |  11 |  10 |   0 |   6 |   0 |   0 |   5 |   5 |    5 |    0 |    5 |   10 |   15 |    6 |
| Course Mapping |    |   3 |   3 |   2 |   0 |   2 |   0 |   0 |   1 |   1 |    1 |    0 |    1 |    2 |    3 |    2 |

** REVISION 2018                                                   :noexport:
1. As per the suggestion, application of trees has been included
2. Comments for the inclusion and removal of the contents in this
   syllabus with respect to AU R-2017 have been included along with
   the units
3. The syllabi for UG and PG are different to a larger extent
4. Course outcomes are specified and aligned with the units
5. Suggestive experiments are specified in the separate lab course for
   this subject

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |


** COURSE OBJECTIVES
- To understand the concepts of ADT
- To comprehend the notion of linear and non linear data structures
- To design suitable data structures for different problems and
  implement them in a high level programming language
- To understand the different types of searching and sorting techniques
- To learn the introductory concepts of hashing techniques.

{{{unit}}}
| UNIT I | LINEAR DATA STRUCTURES - LIST | 10 |
Algorithm Analysis: Running time calculations; Abstract Data Types
(ADTs); List ADT: Array implementation of lists -- Linked lists --
Circular linked lists -- Doubly linked lists -- Applications of Lists:
Polynomial manipulation.

#+BEGIN_COMMENT
Inclusion - Algorithm Analysis: Running time calculations; 
Thoughtprocess - To study the general notations of algorithm analysis
#+END_COMMENT

{{{unit}}}
| UNIT II | LINEAR DATA STRUCTURES – STACKS AND QUEUES | 8 |
Stack ADT: Stack model -- Implementation of stacks -- Applications:
Balancing symbols -- Infix to postfix conversion -- Evaluating postfix
expressions; Queue ADT: Queue model -- Array implementation of queues
-- Applications of queues.

{{{unit}}}
| UNIT III | NON LINEAR DATA STRUCTURES – TREES   | 9 |
Preliminaries: Implementation of trees -- Tree traversals with an
application; Binary trees: Expression trees; Binary search tree ADT;
AVL trees; B-Trees; Priority Queues: Binary heap.

#+BEGIN_COMMENT
Application of trees is included along with tree traversals. It's in
the text book.  Threaded binary tree and B+ tree is removed as per AU
syllabus, since it requires more no. of hours.

Removal 
       Threaded binary tree and B+ tree
Thought process  
       Removed as they will consume more time
       Having an idea of b-tree and binary search tree, students will be able to learn the concepts of the above               
#+END_COMMENT

{{{unit}}}
| UNIT IV | NON LINEAR DATA STRUCTURES – GRAPHS | 9 |
Graph Algorithms: Definitions -- Representation of graphs; Graph
Traversals: Breadth-first traversal -- Depth-first traversal;
Topological sort -- Shortest-Path Algorithms: Dijkstra's algorithm --
All-pairs shortest path.

#+BEGIN_COMMENT
Cut vertex and Euler circuits are removed as per AU syllabus as we
have included the application of graph i.e Shortest-Path Algorithms.

Inclusion 
         Specific applications of graph namely, shortest path algorithms have been included 
Thought process
         Because in R-2017, it has been mentioned in general
Removal
       Cut vertex and Euler circuits
Thought process
       These are again the applications of DFS. One such (Bi connectivity) is already discussed
         
#+END_COMMENT

{{{unit}}}
| UNIT V | SEARCHING, SORTING AND HASHING TECHNIQUES | 9 |
Searching: Linear search -- Binary search; Sorting: Selection sort --
Shell sort; Hashing: Hash function -- Separate chaining -- Open
addressing -- Rehashing -- Extendible hashing.

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to:
- Elucidate and implement various operations of List (K3)
- Develop applications using stack and queue (K3)
- Implement the operations of balanced and unbalanced trees (K3)
- Develop applications using shortest path and traversal algorithms of graph  (K3)
- Choose suitable searching and sorting algorithms to solve various computing problems (K4).
   
      
** TEXT BOOKS
1. M A Weiss, ``Data Structures and Algorithm Analysis in C'', 2nd
   Edition, Pearson Education, 2002.
2. Richard F Gilberg, Behrouz A Forouzan, ``Data Structures: A
   Pseudocode Approach with C'', 2nd Edition, Cengage India, 2007.

** REFERENCES
1. A V Aho, J E Hopcroft, J D Ullman, ``Data Structures and
   Algorithms'', Pearson Education, 1st Edition Reprint, 2003.
2. R F Gilberg, B A Forouzan, ``Data Structures'', 2nd Edition,
   Thomson India Edition, 2005.
3. Ellis Horowitz, Sartaj Sahni, Susan Anderson-Freed, ``Fundamentals
   of Data Structures in C'', 2nd Edition, University Press, 2008.
4. S Sridhar, ``Design and Analysis of Algorithms``, 1st Edition,
   Oxford University Press, 2014.
5. Byron Gottfried, Jitender Chhabra, ``Programming with C`` (Schaum’s
   Outlines Series), 3rd Edition, Mcgraw Hill Higher Education, 2010.

