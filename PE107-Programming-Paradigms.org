* <<<PE107>>> PROGRAMMING PARADIGMS
:properties:
:author: R Kanchana
:date: 
:end:
#+startup: showall
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
|                |    |  K3 |  K4 |  K5 |  K5 |  K6 |   - |   - |   - |   - |    - |    - |    - |   K5 |   K3 |   K6 |
| CO1            | K3 |   3 |   2 |   2 |   2 |   1 |   0 |   0 |   2 |   3 |    2 |    0 |    3 |    2 |    3 |    1 |
| CO2            | K3 |   3 |   2 |   2 |   2 |   1 |   0 |   0 |   2 |   3 |    2 |    0 |    3 |    2 |    3 |    1 |
| CO3            | K3 |   3 |   2 |   2 |   2 |   1 |   0 |   0 |   2 |   3 |    2 |    0 |    3 |    2 |    3 |    1 |
| CO4            | K3 |   3 |   2 |   2 |   2 |   1 |   0 |   0 |   2 |   3 |    2 |    0 |    3 |    2 |    3 |    1 |
| CO5            | K3 |   3 |   2 |   2 |   2 |   1 |   0 |   0 |   2 |   3 |    2 |    0 |    3 |    2 |    3 |    1 |
| Score          |    |  15 |  10 |  10 |  10 |   5 |   0 |   0 |  10 |  15 |   10 |    0 |   15 |   10 |   15 |    5 |
| Course Mapping |    |   3 |   2 |   2 |   2 |   1 |   0 |   0 |   2 |   3 |    2 |    0 |    3 |    2 |    3 |    1 |

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To introduce various programming paradidgms
- To understand programming paradigms such as imperative,
  object-oriented, logic, functional and concuuent with illustrative
  examples.

{{{unit}}}
| UNIT I | IMPERATIVE PROGRAMMING | 9 |
Role of programming languages; Programming paradigms; Structured
programming: Data representation -- Procedure activations -- Examples
in C.

{{{unit}}}
|UNIT II | OBJECT ORIENTED PROGRAMMING | 9 |
Abstract data types -- object model -- object-oriented thinking --
Examples in Java.

{{{unit}}}
|UNIT III | FUNCTIONAL PROGRAMMING  | 9 |
Elements of functional programming: Values and operations --
Approaches to expression evaluation -- Lexical scope -- Type checking;
Haskell: Expressions -- Lists -- Types and values -- Control flow --
Functions -- Tuples -- Examples.

{{{unit}}}
|UNIT IV | LOGIC PROGRAMMING | 9 |
Logic and Horn clauses, Prolog: Data structures -- Programming
techniques -- Control -- Cuts -- Examples.

{{{unit}}}
|UNIT V | CONCURRENT PROGRAMMING       | 9 |
Concurrency concepts -- Synchronization strategies -- Interleaving --
Liveness -- Safe access to shared data -- Examples in Java.
 
\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Understand imperative programming paradigm and some examples in C
  (K3)
- Understand object-oriented programming paradigm and explore some
  examples in C++ or Java or Python (K3)
- Understand functional programming paradigm and explore some examples
  in Haskell (K3)
- Understand logic programming paradigm and explore some examples in
  Prolog (K3)
- Understand concurrent programming paradigm and explore some examples
  in Java (K3).

** TEXT BOOKS
1. Ravi Sethi, Viswanatha K V, ``Programming Languages : Concepts and
   constructs'', 2nd Edition, Pearson, 2011
2. Allan B Tucker, Robert E Noonan, ``Programming Languages:
   Principles and Paradigms'', 2nd Edition, McGraw Hill, 2007

** REFERENCES
1. Michael Scott, ``Programming Language Pragmatics'', 4th Edition,
   Morgan Kaufmann, 2015
2. Robert W Sebesta,``Concepts of Programming Languages'', 11th
   Edition, Pearson, 2016
3. Maurizio Gabbrielli, Simone Martini, ``Programming Languages:
   Principles and Paradigms'', Springer, 2010
